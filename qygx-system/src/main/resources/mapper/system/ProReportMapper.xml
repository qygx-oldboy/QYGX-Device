<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qygx.system.mapper.ProReportMapper">

    <resultMap type="ProInspect" id="ProInspectResult">
        <id     property="id"      column="id"      />
        <result property="qrCode"    column="qr_code"    />
        <result property="productCode"     column="product_code"     />
        <result property="productType"   column="product_type"   />
        <result property="materialType"    column="material_type"    />
        <result property="materialQuality"      column="material_quality"      />
        <result property="quantityStd"    column="quantity_std"    />
        <result property="beginTime"      column="begin_time"      />
        <result property="endTime"    column="end_time"    />
        <result property="runTime"    column="run_time"    />
        <result property="inspectedNum"    column="inspected_num"    />
        <result property="okNum"    column="ok_num"    />
        <result property="ngNum"    column="ng_num"    />
        <result property="ng1"    column="ng1"    />
        <result property="ng2"    column="ng2"    />
        <result property="ng3"    column="ng3"    />
        <result property="ng4"    column="ng4"    />
        <result property="ng5"    column="ng5"    />
        <result property="ng6"    column="ng6"    />
        <result property="ng7"    column="ng7"    />
        <result property="ng8"    column="ng8"    />
        <result property="ng9"    column="ng9"    />
        <result property="ng10"    column="ng10"    />
        <result property="result"    column="result"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="remark1"    column="remark1"    />
        <result property="remark2"    column="remark2"    />
        <result property="remark3"    column="remark3"    />
        <result property="remark4"    column="remark4"    />
        <result property="lianglv"    column="lianglv"    />
    </resultMap>


    <resultMap type="InspectDto" id="InspectDtoResult">
        <id     property="id"      column="id"      />
        <result property="name"    column="name"    />
        <result property="checkTotal"    column="inspected_num"    />
        <result property="goodTotal"    column="ok_num"    />
        <result property="okPercent"    column="ok_percent"    />
        <result property="ng1"    column="ng1"    />
        <result property="ng2"    column="ng2"    />
        <result property="ng3"    column="ng3"    />
        <result property="ng4"    column="ng4"    />
        <result property="ng5"    column="ng5"    />
        <result property="ng6"    column="ng6"    />
        <result property="ng7"    column="ng7"    />
        <result property="ng8"    column="ng8"    />
        <result property="ng9"    column="ng9"    />
        <result property="ng10"    column="ng10"  />
        <result property="date"    column="date"    />
        <result property="type"    column="type"    />
        <result property="subType"    column="sub_type"    />
    </resultMap>



    <resultMap type="QrCodeRecord" id="QrCodeRecordResult">
        <id     property="id"      column="id"      />
        <result property="qrCode"    column="qr_code"    />
        <result property="productCode"     column="product_code"     />
        <result property="productType"   column="product_type"   />
        <result property="materialType"    column="material_type"    />
        <result property="materialQuality"      column="material_quality"      />
        <result property="materialSpec"    column="material_specification"    />
        <result property="quantity"      column="quantity"      />
        <result property="quantitySum"    column="quantity_sum"    />
        <result property="quantity3"    column="quantity3"    />
        <result property="quantity4"    column="quantity4"    />
        <result property="processName"    column="process_name"    />
        <result property="processResult"    column="process_result"    />
        <result property="processStatus"    column="process_status"    />
        <result property="currentQuantity"    column="current_quantity"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <resultMap type="Operators" id="OperatorsResult">
        <id     property="id"      column="id"      />
        <result property="operatorId"    column="operator_id"    />
        <result property="name"     column="name"     />
        <result property="duty"   column="duty"   />
    </resultMap>



    <sql id="selectInspectVo">
        select id,qr_code, product_code, product_type, material_type, material_quality, quantity_std, inspector, begin_time, end_time, run_time,inspected_num,ok_num,ng_num
             ,ng1,ng2,ng3,ng4,ng5,ng6,ng7,ng8,ng9,ng10,status,remark,remark1,remark2,remark3,remark4
        from inspect
    </sql>



    <select id="selectInspectChart" parameterType="ProInspect" resultMap="ProInspectResult">
        <include refid="selectInspectVo"/>
        <where>
            <if test="productType != null  and productType != ''"> and product_type = #{productType}</if>
            <if test="materialQuality != null  and materialQuality != ''"> and material_quality = #{materialQuality}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and date_format(begin_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and date_format(begin_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
        order by begin_time asc
    </select>


    <select id="selectInspectList" parameterType="ProInspect" resultMap="ProInspectResult">
        <include refid="selectInspectVo"/>
        <where>
            <if test="qrCode != null  and qrCode != ''"> and qr_code = #{qrCode}</if>
            <if test="productCode != null  and productCode != ''"> and product_code = #{productCode}</if>
            <if test="productType != null  and productType != ''"> and product_type = #{productType}</if>
            <if test="materialType != null  and materialType != ''"> and material_type = #{materialType}</if>
            <if test="materialQuality != null  and materialQuality != ''"> and material_quality = #{materialQuality}</if>
            <if test="inspector != null  and inspector != ''"> and inspector = #{inspector}</if>
            <if test="okNum != null">and ok_num = #{okNum}</if>
            <if test="beginTime != null "> and begin_time = #{beginTime}</if>
            <if test="lianglv != null "> and ok_num/inspected_num &lt;= #{lianglv}</if>
        </where>
        order by begin_time desc
    </select>




    <select id="selectBreedList" resultMap="ProInspectResult">
        select id,product_type,material_quality from inspect GROUP BY product_type,material_quality
    </select>


    <select id="selectInspectListByTime" parameterType="ProInspect" resultMap="ProInspectResult">
        <include refid="selectInspectVo"/>
        <where>
            begin_time &gt; #{beginTime}  and  begin_time &lt; #{endTime}
        <if test="productType != null and productType != ''">
            AND product_type = #{productType}
        </if>
        <if test="materialQuality != null and materialQuality != ''">
            AND material_quality = #{materialQuality}
        </if>
        </where>

    </select>

    <select id="selectInspectById" parameterType="Long" resultMap="ProInspectResult">
        <include refid="selectInspectVo"/>
        where id = #{id}
    </select>

    <select id="selectInspectByCode" parameterType="String" resultMap="ProInspectResult">
        <include refid="selectInspectVo"/>
        where qr_code = #{code}
    </select>

    <insert id="insertInspect" parameterType="ProInspect" useGeneratedKeys="true" keyProperty="id">
        insert into inspect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="qrCode != null and qrCode != ''">qr_code,</if>
            <if test="productCode != null and productCode != ''">product_code,</if>
            <if test="productType != null and productType != ''">product_type,</if>
            <if test="materialType != null and materialType != ''">material_type,</if>
            <if test="materialQuality != null and materialQuality != ''">material_quality,</if>
            <if test="quantityStd != null">quantity_std,</if>
            <if test="inspector != null and inspector != ''">inspector,</if>
            <if test="beginTime != null">begin_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="runTime != null">run_time,</if>
            <if test="okPercent != null">ok_percent,</if>
            <if test="ngPercent != null">ng_percent,</if>
            <if test="inspectedNum != null">inspected_num,</if>
            <if test="okNum != null">ok_num,</if>
            <if test="ngNum != null">ng_num,</if>
            <if test="ng1 != null">ng1,</if>
            <if test="ng2 != null">ng2,</if>
            <if test="ng3 != null">ng3,</if>
            <if test="ng4 != null">ng4,</if>
            <if test="ng5 != null">ng5,</if>
            <if test="ng6 != null">ng6,</if>
            <if test="ng7 != null">ng7,</if>
            <if test="ng8 != null">ng8,</if>
            <if test="ng9 != null">ng9,</if>
            <if test="ng10 != null">ng10,</if>
            <if test="result != null">result,</if>
            <if test="remark != null">remark</if>
            <if test="remark1 != null">remark1,</if>
            <if test="remark2 != null">remark2,</if>
            <if test="remark3 != null">remark3,</if>
            <if test="remark4 != null">remark4,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="qrCode != null and qrCode != ''">#{qrCode},</if>
            <if test="productCode != null and productCode != ''">#{productCode},</if>
            <if test="productType != null and productType != ''">#{productType},</if>
            <if test="materialType != null and materialType != ''">#{materialType},</if>
            <if test="materialQuality != null and materialQuality != ''">#{materialQuality},</if>
            <if test="quantityStd != null">#{quantityStd},</if>
            <if test="inspector != null and inspector != ''">#{inspector},</if>
            <if test="beginTime != null">#{beginTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="runTime != null">#{runTime},</if>
            <if test="okPercent != null">#{okPercent},</if>
            <if test="ngPercent != null">#{ngPercent},</if>
            <if test="inspectedNum != null">#{inspectedNum},</if>
            <if test="okNum != null">#{okNum},</if>
            <if test="ngNum != null">#{ngNum},</if>
            <if test="ng1 != null">#{ng1},</if>
            <if test="ng2 != null">#{ng2},</if>
            <if test="ng3 != null">#{ng3},</if>
            <if test="ng4 != null">#{ng4},</if>
            <if test="ng5 != null">#{ng5},</if>
            <if test="ng6 != null">#{ng6},</if>
            <if test="ng7 != null">#{ng7},</if>
            <if test="ng8 != null">#{ng8},</if>
            <if test="ng9 != null">#{ng9},</if>
            <if test="ng10 != null">#{ng10},</if>
            <if test="result != null">#{result},</if>
            <if test="remark != null">${remark}</if>
            <if test="remark1 != null">${remark1}</if>
            <if test="remark2 != null">${remark2}</if>
            <if test="remark3 != null">${remark3}</if>
            <if test="remark4 != null">${remark4}</if>
        </trim>
    </insert>


    <update id="updateInspect" parameterType="ProInspect">
        update inspect
        <trim prefix="SET" suffixOverrides=",">
            <if test="qrCode != null and qrCode != ''">qr_code = #{qrCode},</if>
            <if test="productCode != null and productCode != ''">product_code = #{productCode},</if>
            <if test="productType != null and productType != ''">product_type = #{productType},</if>
            <if test="materialType != null and materialType != ''">material_type = #{materialType},</if>
            <if test="materialQuality != null and materialQuality != ''">material_quality = #{materialQuality},</if>
            <if test="quantityStd != null">quantity_std = #{quantityStd},</if>
            <if test="inspector != null and inspector != ''">inspector = #{inspector},</if>
            <if test="beginTime != null">begin_time = #{beginTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="runTime != null">run_time = #{runTime},</if>
            <if test="okPercent != null">ok_percent = #{okPercent},</if>
            <if test="ngPercent != null">ng_percent = #{ngPercent},</if>
            <if test="inspectedNum != null">inspected_num = #{inspectedNum},</if>
            <if test="okNum != null">ok_num = #{okNum},</if>
            <if test="ngNum != null">ng_num = #{ngNum},</if>
            <if test="ng1 != null">ng1 = #{ng1},</if>
            <if test="ng2 != null">ng2 = #{ng2},</if>
            <if test="ng3 != null">ng3 = #{ng3},</if>
            <if test="ng4 != null">ng4 = #{ng4},</if>
            <if test="ng5 != null">ng5 = #{ng5},</if>
            <if test="ng6 != null">ng6 = #{ng6},</if>
            <if test="ng7 != null">ng7 = #{ng7},</if>
            <if test="ng8 != null">ng8 = #{ng8},</if>
            <if test="ng9 != null">ng9 = #{ng9},</if>
            <if test="ng10 != null">ng10 = #{ng10},</if>
            <if test="result != null">result = #{result},</if>
            <if test="remark != null and remark != ''">remark1 = #{remark},</if>
            <if test="remark1 != null and remark1 != ''">remark1 = #{remark1},</if>
            <if test="remark2 != null and remark2 != ''">remark2 = #{remark2},</if>
            <if test="remark3 != null and remark3 != ''">remark3 = #{remark3},</if>
            <if test="remark4 != null and remark4 != ''">remark4 = #{remark4},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteInspectById" parameterType="Long">
        delete from inspect where id = #{id}
    </delete>

    <delete id="deleteInspectByIds" parameterType="String">
        delete from inspect where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectInspectByQrCode" parameterType="String" resultMap="ProInspectResult">
        <include refid="selectInspectVo"/>
        where qr_code = #{qrCode}
    </select>


    <select id="selectDailyInspect" parameterType="InspectDto" resultMap="InspectDtoResult">
        select t1.id,t1.name,sum(t1.inspected_num) inspected_num,sum(t1.ok_num) ok_num,
               convert(sum(t1.ok_num)/sum(t1.inspected_num),decimal(15,2)) ok_percent,
               convert(sum(t1.ng1)/sum(t1.inspected_num),decimal(15,2)) ng1,
               convert(sum(t1.ng2)/sum(t1.inspected_num),decimal(15,2)) ng2,
               convert(sum(t1.ng3)/sum(t1.inspected_num),decimal(15,2)) ng3,
               convert(sum(t1.ng4)/sum(t1.inspected_num),decimal(15,2)) ng4,
               convert(sum(t1.ng5)/sum(t1.inspected_num),decimal(15,2)) ng5,
               convert(sum(t1.ng6)/sum(t1.inspected_num),decimal(15,2)) ng6,
               convert(sum(t1.ng7)/sum(t1.inspected_num),decimal(15,2)) ng7,
               convert(sum(t1.ng8)/sum(t1.inspected_num),decimal(15,2)) ng8,
               convert(sum(t1.ng9)/sum(t1.inspected_num),decimal(15,2)) ng9,
               convert(sum(t1.ng10)/sum(t1.inspected_num),decimal(15,2)) ng10
        from  (select *,CONVERT(begin_time,date) as name from  inspect order by name) t1
        <where>
            <if test="name != null and name != ''">
                AND name = #{name}
            </if>
        </where>
        group by t1.name
        order by t1.name desc
    </select>


    <select id="selectDailyDetail" parameterType="InspectDto" resultMap="InspectDtoResult">
        select id,sub_type,type,date,sum(t1.inspected_num) inspected_num,sum(t1.ok_num) ok_num,
            CONCAT_WS(".",product_type,material_quality) name,
            convert(sum(t1.ok_num)/sum(t1.inspected_num),decimal(15,2)) ok_percent,
            convert(sum(t1.ng1)/sum(t1.inspected_num),decimal(15,2)) ng1,
            convert(sum(t1.ng2)/sum(t1.inspected_num),decimal(15,2)) ng2,
            convert(sum(t1.ng3)/sum(t1.inspected_num),decimal(15,2)) ng3,
            convert(sum(t1.ng4)/sum(t1.inspected_num),decimal(15,2)) ng4,
            convert(sum(t1.ng5)/sum(t1.inspected_num),decimal(15,2)) ng5,
            convert(sum(t1.ng6)/sum(t1.inspected_num),decimal(15,2)) ng6,
            convert(sum(t1.ng7)/sum(t1.inspected_num),decimal(15,2)) ng7,
            convert(sum(t1.ng8)/sum(t1.inspected_num),decimal(15,2)) ng8,
            convert(sum(t1.ng9)/sum(t1.inspected_num),decimal(15,2)) ng9,
            convert(sum(t1.ng10)/sum(t1.inspected_num),decimal(15,2)) ng10
        from (
            SELECT *,
            CASE
            WHEN locate('FG', qr_code) > 0 THEN '返工产品'
            WHEN locate('FX', qr_code) > 0 THEN '返修产品'
            ELSE '一次产品'
            END
            as sub_type,
            if(ok_num=0,"抽检批退","全检挑选") as type,
            CONVERT(begin_time,date) as date
            from inspect
            ) t1
        where t1.date = #{date}
          and type = #{type}
          and t1.sub_type = #{subType}
        group by product_type,material_quality
    </select>

    <select id="selectDailyFullOrSpot" parameterType="InspectDto" resultMap="InspectDtoResult">
        select t1.id,t1.type as name,sum(t1.inspected_num) inspected_num,sum(t1.ok_num) ok_num,
               convert(sum(t1.ok_num)/sum(t1.inspected_num),decimal(15,2)) ok_percent,
               convert(sum(t1.ng1)/sum(t1.inspected_num),decimal(15,2)) ng1,
               convert(sum(t1.ng2)/sum(t1.inspected_num),decimal(15,2)) ng2,
               convert(sum(t1.ng3)/sum(t1.inspected_num),decimal(15,2)) ng3,
               convert(sum(t1.ng4)/sum(t1.inspected_num),decimal(15,2)) ng4,
               convert(sum(t1.ng5)/sum(t1.inspected_num),decimal(15,2)) ng5,
               convert(sum(t1.ng6)/sum(t1.inspected_num),decimal(15,2)) ng6,
               convert(sum(t1.ng7)/sum(t1.inspected_num),decimal(15,2)) ng7,
               convert(sum(t1.ng8)/sum(t1.inspected_num),decimal(15,2)) ng8,
               convert(sum(t1.ng9)/sum(t1.inspected_num),decimal(15,2)) ng9,
               convert(sum(t1.ng10)/sum(t1.inspected_num),decimal(15,2)) ng10
        from  (select *,if(ok_num=0,"抽检批退","全检挑选") as type,CONVERT(begin_time,date) as date from inspect) t1
        where t1.date = #{name}
        group by t1.type
    </select>


    <select id="selectDailyByType" parameterType="InspectDto" resultMap="InspectDtoResult">
        select t1.id,t1.sub_type as name,t1.type,t1.date,sum(t1.inspected_num) inspected_num,sum(t1.ok_num) ok_num,
               convert(sum(t1.ok_num)/sum(t1.inspected_num),decimal(15,2)) ok_percent,
               convert(sum(t1.ng1)/sum(t1.inspected_num),decimal(15,2)) ng1,
               convert(sum(t1.ng2)/sum(t1.inspected_num),decimal(15,2)) ng2,
               convert(sum(t1.ng3)/sum(t1.inspected_num),decimal(15,2)) ng3,
               convert(sum(t1.ng4)/sum(t1.inspected_num),decimal(15,2)) ng4,
               convert(sum(t1.ng5)/sum(t1.inspected_num),decimal(15,2)) ng5,
               convert(sum(t1.ng6)/sum(t1.inspected_num),decimal(15,2)) ng6,
               convert(sum(t1.ng7)/sum(t1.inspected_num),decimal(15,2)) ng7,
               convert(sum(t1.ng8)/sum(t1.inspected_num),decimal(15,2)) ng8,
               convert(sum(t1.ng9)/sum(t1.inspected_num),decimal(15,2)) ng9,
               convert(sum(t1.ng10)/sum(t1.inspected_num),decimal(15,2)) ng10
        from (
                 SELECT *,
                        CASE
                            WHEN locate('FG', qr_code) > 0 THEN '返工产品'
                            WHEN locate('FX', qr_code) > 0 THEN '返修产品'
                            ELSE '一次产品'
                        END as sub_type,
                        if(ok_num=0,"抽检批退","全检挑选") as type,
                        CONVERT(begin_time,date) as date
                 from inspect
             ) t1
        where t1.date = #{date}
          and t1.type = #{type}
        group by t1.sub_type
    </select>


    <select id="getQrCodeRecord" parameterType="String" resultMap="QrCodeRecordResult">
        select id,qr_code,product_code,product_type,material_quality,material_specification,quantity,
               quantity_sum,quantity3,quantity4,process_name,process_result,process_status,current_quantity,remark
        from qrcode_records where  qr_code = #{qrCode}
    </select>


    <select id="selectDailyPerson" parameterType="InspectDto" resultMap="InspectDtoResult">
        select id,sub_type,type,date,sum(t1.inspected_num) inspected_num,sum(t1.ok_num) ok_num,
            product,inspector name,
            convert(sum(t1.ok_num)/sum(t1.inspected_num),decimal(15,2)) ok_percent,
            convert(sum(t1.ng1)/sum(t1.inspected_num),decimal(15,2)) ng1,
            convert(sum(t1.ng2)/sum(t1.inspected_num),decimal(15,2)) ng2,
            convert(sum(t1.ng3)/sum(t1.inspected_num),decimal(15,2)) ng3,
            convert(sum(t1.ng4)/sum(t1.inspected_num),decimal(15,2)) ng4,
            convert(sum(t1.ng5)/sum(t1.inspected_num),decimal(15,2)) ng5,
            convert(sum(t1.ng6)/sum(t1.inspected_num),decimal(15,2)) ng6,
            convert(sum(t1.ng7)/sum(t1.inspected_num),decimal(15,2)) ng7,
            convert(sum(t1.ng8)/sum(t1.inspected_num),decimal(15,2)) ng8,
            convert(sum(t1.ng9)/sum(t1.inspected_num),decimal(15,2)) ng9,
            convert(sum(t1.ng10)/sum(t1.inspected_num),decimal(15,2)) ng10
        from (
            SELECT *,CONCAT_WS(".",product_type,material_quality) product,
            CASE
            WHEN locate('FG', qr_code) > 0 THEN '返工产品'
            WHEN locate('FX', qr_code) > 0 THEN '返修产品'
            ELSE '一次产品'
            END
            as sub_type,
            if(ok_num=0,"抽检批退","全检挑选") as type,
            CONVERT(begin_time,date) as date
            from inspect
            ) t1
        where t1.date = #{date}
          and type = #{type}
          and t1.sub_type = #{subType}
          and t1.product = #{product}
        group by product_type,material_quality,inspector
    </select>

    <select id="selectOperators" parameterType="Operators" resultMap="OperatorsResult">
        select * from operators
        <where>
            <if test="duty != null and duty != ''">
                AND duty = #{duty}
            </if>
        </where>
    </select>

    <update id="updateQrCodeRecord" parameterType="QrCodeRecord">
        update qrcode_records
        <set>
            <if test="processStatus != null and processStatus != ''">process_status = #{processStatus},</if>
            update_time = sysdate()
        </set>
        where qr_code = #{qrCode}
    </update>

</mapper>
